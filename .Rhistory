, ln_trend = T
, ln_lab = T
, plot_title = T)
devtools::load_all(".")
seasonal_dot(dat_wq, param = 'temp',
, ln_trend = T
, ln_lab = T
, plot_title = T)
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
seasonal_dot(dat_wq, param = 'temp',
, ln_trend = T
, ln_lab = T
, plot_title = T)
devtools::load_all(".")
seasonal_dot(dat_wq, param = 'temp',
, ln_trend = T
, ln_lab = T
, plot_title = T)
devtools::load_all(".")
system.time(
seasonal_dot(dat_nut, param = 'chla_n',
, ln_trend = F
, ln_lab = F
, plot_title = T)
)
system.time(
seasonal_dot(dat_wq, param = 'temp',
, ln_trend = T
, ln_lab = T
, plot_title = T)
)
data(elksmnut)
dat_nut <- elksmnut
dat_nut <- subset(dat_nut, subset = c('2007-01-01 0:00', '2017-01-01 0:00'))
dat_nut <- qaqc(dat_nut, qaqc_keep = c(0, 3, 5))
seasonal_dot(dat_nut, param = 'chla_n',
, ln_trend = F
, ln_lab = F
, plot_title = T)
seasonal_dot(dat_nut, param = 'chla_n',
, ln_trend = F
, ln_lab = F
, season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, plot_title = T)
seasonal_dot(dat_nut, param = 'chla_n',
, ln_trend = T
, ln_lab = T
, season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, plot_title = T)
x <-
seasonal_dot(dat_nut, param = 'chla_n',
, ln_trend = T
, ln_lab = T
, season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, plot_title = T)
x +
scale_y_continuous(limits = c(0, 20))
x <-
seasonal_dot(dat_nut, param = 'chla_n',
, ln_trend = F
, ln_lab = F
, season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, plot_title = T)
x +
scale_y_continuous(limits = c(0, 20))
devtools::load_all(".")
elksmwq <- elksmwq
View(elksmwq)
?subset.swmpr
elkswq <- subset(elkswq, subset = '2007-01-01 0:00', operator = '>=')
elksmwq <- subset(elkswq, subset = '2007-01-01 0:00', operator = '>=')
elksmwq <- subset(elksmwq, subset = '2007-01-01 0:00', operator = '>=')
save(elksmwq)
save(elksmwq, 'elksmwq.rda')
?save
save(elksmwq, file = 'elksmwq.rda')
devtools::load_all(".")
elksmnut <- elksmnut
elksmnut <- subset(elksmnut, subset = '2007-01-01 0:00', operator = '>=')
save(elksmnut, file = 'elksmnut.rda')
library(leaflet)
library(leaflet)
devtools::document()
install.packages('leaflet')
unattach(leaflet)
detach('package:leaflet', unload = T)
?use_data
devtools::use_data(elksmwq)
devtools::use_data(elksmwq, overwrite = T)
devtools::use_data(elksmnut, overwrite = T)
cbm_spatial
cbm_spatial <- cbm_spatial
devtools::use_data(cbm_spatial, overwrite = T)
?annual_range
dat <- qaqc(elksmwq, qaqc_keep = c('0', '3', '5'))
library(SWMPr)
dat <- qaqc(elksmwq, qaqc_keep = c('0', '3', '5'))
do_plt <- annual_range(dat, param = 'do_mgl', target_yr = 2012)
do_plt
do_plt <- annual_range(dat, param = 'do_mgl', target_yr = 2009)
do_plt
do_plt <- annual_range(dat, param = 'do_mgl', target_yr = 2009, plot = F)
?annual_range
chk <- dat %>% filter(year(datetimestamp) == 2009)
library(dplyr)
chk <- dat %>% filter(year(datetimestamp) == 2009)
library(lubridate)
chk <- dat %>% filter(year(datetimestamp) == 2009)
summ <- chk %>% group_by(month(datetimestamp)) %>%
summarise(count)
summ <- chk %>% group_by(month(datetimestamp)) %>%
summarise(count = n())
View(summ)
View(chk)
summ <- chk %>% group_by(month(datetimestamp)) %>%
summarise(count = sum(do_mgl, na.rm = T))
View(summ)
devtools::load_all(".")
x <- annual_range(dat, param = 'do_mgl', target_yr = 2009)
View(x)
levels(x$season)
devtools::load_all(".")
x <- annual_range(dat, param = 'do_mgl', target_yr = 2009)
View(x)
replace(x, list = list('-Inf', 'Inf', 'NaN'), 'NA')
replace(x, c('-Inf', 'Inf', 'NaN'), 'NA')
y <- is.finite(x)
y <- is.finite(x, 'NA')
y <- is.infinite(x, 'NA')
y <- is.infinite(x)
?is.infinite
y <- is.infinite(x) <- NA
x[is.infinite(x)] <- NA
x[!is.finite(x)] <- 'NA'
x[!is.finite(x)] <- NA
m <- x
m[!is.finite(m)] <- 0
m[!is.finite(m), ] <- 0
m[ , !is.finite(m)] <- 0
m <- lapply(m, is.infinite)
m
m <- x
is.na(m) <- sapply(m, is.infinite)
View(m)
m <- x
is.na(m) <- sapply(m, !is.finite)
clean.vals <- function(x) !is.finite
is.na(m) <- sapply(m, clean.vals)
clean.vals <- function(x) !is.finite(x)
is.na(m) <- sapply(m, clean.vals)
class(m)
m <- x
is.na(m) <- sapply(m, function(x) !is.finite(x))
?geom_ribbon
levels(x$season)
devtools::load_all(".")
x <- annual_range(dat, param = 'do_mgl', target_yr = 2009)
devtools::load_all(".")
x <- annual_range(dat, param = 'do_mgl', target_yr = 2009)
devtools::load_all(".")
x <- annual_range(dat, param = 'do_mgl', target_yr = 2009)
x
warnings()
x <- annual_range(dat, param = 'do_mgl', target_yr = 2009)
warnings()
x
devtools::load_all(".")
x <- annual_range(dat, param = 'do_mgl', target_yr = 2009)
x
View(x)
devtools::load_all(".")
x <- annual_range(dat, param = 'do_mgl', target_yr = 2009)
x
devtools::load_all(".")
x <- annual_range(dat, param = 'do_mgl', target_yr = 2009)
x
warnings()
x <- annual_range(dat, param = 'do_mgl', target_yr = 2009)
warnings()
devtools::load_all(".")
x <- annual_range(dat, param = 'do_mgl', target_yr = 2009)
devtools::load_all(".")
x <- annual_range(dat, param = 'do_mgl', target_yr = 2009)
x
devtools::load_all(".")
x <- annual_range(dat, param = 'do_mgl', target_yr = 2009)
x
levels(x$season)
devtools::load_all(".")
x <- annual_range(dat, param = 'do_mgl', target_yr = 2009)
warnings()
devtools::load_all(".")
x <- annual_range(dat, param = 'do_mgl', target_yr = 2009)
warnings
warnings()
devtools::load_all(".")
x <- annual_range(dat, param = 'do_mgl', target_yr = 2009)
devtools::load_all(".")
devtools::load_all(".")
x <- annual_range(dat, param = 'do_mgl', target_yr = 2009)
library(tidyr)
?tidyr::complete
y <- complete(x, fill = 'NA')
y <- complete(x, season)
y
devtools::load_all(".")
x <- annual_range(dat, param = 'do_mgl', target_yr = 2009)
devtools::load_all(".")
x <- annual_range(dat, param = 'do_mgl', target_yr = 2009)
x
devtools::document()
devtools::load_all(".")
?seasonal_boxplot
dat <- elksmwq
dat <- qaqc(dat, qaqc_keep = c('0', '3', '5'))
do_plt <- seasonal_boxplot(dat, param = 'do_mgl')
do_plt
?assign_season
do_plt <- seasonal_boxplot(dat, param = 'do_mgl',
season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12)),
season_names = c('Winter', 'Spring', 'Summer', 'Fall'),
season_start = 'Spring'))
do_plt <- seasonal_boxplot(dat, param = 'do_mgl',
season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12)),
season_names = c('Winter', 'Spring', 'Summer', 'Fall'),
season_start = 'Spring')
do_plt
?seasonal_boxplot
do_plt <- seasonal_boxplot(dat, param = 'do_mgl',
target_yr = 2015,
season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12)),
season_names = c('Winter', 'Spring', 'Summer', 'Fall'),
season_start = 'Spring')
do_plt
devtools::document()
devtools::document()
?seasonal_boxplot
do_plt <- seasonal_boxplot(dat, param = 'do_mgl', FUN = function(x) min(x, na.rm = T))
warnings()
devtools::load_all(".")
do_plt <- seasonal_boxplot(dat, param = 'do_mgl', FUN = function(x) min(x, na.rm = T))
View(do_plt)
devtools::load_all(".")
devtools::load_all(".")
do_plt <- seasonal_boxplot(dat, param = 'do_mgl', FUN = function(x) min(x, na.rm = T))
View(do_plt)
do_plt_min <- seasonal_boxplot(dat, param = 'do_mgl', FUN = function(x) min(x, na.rm = T))
do_plt_mean <- seasonal_boxplot(dat, param = 'do_mgl')
View(do_plt_mean)
View(do_plt_min)
sum(do_plt_mean$do_mgl)
sum(do_plt_min$do_mgl)
chk_vals <- dat %>% group_by(floor_date(datetimestamp, unit = 'days')) %>% summarise(min = min(do_mgl, na.rm = T), mean = mean(do_mgl, na.rm = T))
View(chk_vals)
chk_vals <- dat %>% group_by(floor_date(datetimestamp, unit = 'days')) %>% summarise(min = min(do_mgl, na.rm = T), mean = mean(do_mgl, na.rm = T), max = max(do_mgl, na.rm = T))
View(chk)
View(chk_vals)
do_plt_min <- seasonal_boxplot(dat, param = 'do_mgl', FUN = function(x) min(x, na.rm = T))
View(do_plt_min)
do_plt_min <- seasonal_boxplot(dat, param = 'do_mgl', FUN = function(x) mean(x, na.rm = T))
do_plt_max <- seasonal_boxplot(dat, param = 'do_mgl', FUN = function(x) max(x, na.rm = T))
View(do_plt_max)
devtools::load_all(".")
devtools::load_all(".")
do_plt_min <- seasonal_boxplot(dat, param = 'do_mgl', FUN = function(x) min(x, na.rm = T))
do_plt_max <- seasonal_boxplot(dat, param = 'do_mgl', FUN = function(x) max(x, na.rm = T))
View(do_plt_min)
View(do_plt_max)
devtools::load_all(".")
devtools::document()
devtools::load_all(".")
devtools::document()
devtools::load_all(".")
do_plt <- seasonal_boxplot(dat, param = 'do_mgl')
do_plt_min <- seasonal_boxplot(dat, param = 'do_mgl', stat_lab = 'Minimum', FUN = function(x) min(x, na.rm = T))
do_plt_max <- seasonal_boxplot(dat, param = 'do_mgl', stat_lab = 'Maximum', FUN = function(x) max(x, na.rm = T))
do_plt
do_plt_min
do_plt
do_plt_max
devtools::document()
devtools::document()
sampling_stations <- data(sampling_stations)
data(sampling_stations)
View(sampling_stations)
library(stringr)
?str_detect
sampling_stations$color <- ifelse(str_detect(sampling_stations$Station.Code, 'nut')
, '#0078F0'
, ifelse(str_detect(sampling_stations$Station.Code, 'wq')
, '#444E65'
, '#BF9000')
)
View(sampling_stations)
save(sampling_stations, file = 'data/sampling_stations.rda')
data(sampling_stations)
devtools::load_all(".")
nerrs_id <- 'cbm'
data_location <- paste('inst/extdata/spatial/GIS_Process/', nerrs_id, '/Boundaries/Reserve_Boundaries', sep = '')
shp <- 'CBM_RB_2007.shp'
loc <- paste(data_location, '/', shp, sep = '')
cbm_spatial <- load_shp_file(path = data_location)
?res_local_map
stations <- sampling_stations[(sampling_stations$NERR.Site.ID == 'elk' & sampling_stations$Status == 'Active'), ]$Station.Code
to_match <- c('wq', 'met')
stations<- stations[grep(paste(to_match, collapse = '|'), stations)]
bounding1 <- c(-77.393, 39.741, .-75.553, 38.277)
bounding1 <- c(-77.393, 39.741, -75.553, 38.277)
stns <- stations[grep(paste(to_match, collapse = '|'), stations)]
lab_dir <- c('L', 'R', 'L', 'L', 'L')
scale_pos <- 'bottomleft'
pos <- 'bottomleft'
res_local_map('elk', stations = stns, bbox = bounding1, lab_loc = lab_dir, scale_pos = pos)
shp_fl <- cbm_spatial
res_local_map('elk', stations = stns, bbox = bounding1, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
stn
stns
lab_dir <- c('L', 'R', 'L', 'L')
res_local_map('elk', stations = stns, bbox = bounding1, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
lab_dir <- c('L', 'R', 'L', 'L', 'L')
res_local_map('elk', stations = stns, bbox = bounding1, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
stns
lab_dir <- c('L', 'R', 'L', 'L', 'L')
labs <- c('ap', 'cw', 'nm', 'sm', 'vm')
res_local_map('elk', stations = stns, bbox = bounding1, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_local_map('elk', stations = stns, bbox = bounding1, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
bounding1 <- c(-77.393, 39.741, -75.553, 38.277)
res_local_map('elk', stations = stns, bbox = bounding1, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_local_map('elk', stations = stns, bbox = bounding1, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_local_map('elk', stations = stns, bbox = bounding1, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
res_local_map('elk', stations = stns, bbox = bounding1, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_local_map('elk', stations = stns, bbox = bounding1, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_local_map('elk', stations = stns, bbox = bounding1, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
res_local_map('elk', stations = stns, bbox = bounding2, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
bounding2 <- c(-76.7714, -38.8196, -76.6530, 38.7402)
res_local_map('elk', stations = stns, bbox = bounding2, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
bounding_elk <- c(-121.810978, 36.868218, -121.708667, 36.764050)
res_local_map('elk', stations = stns, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
shp_fl <- elk_spatial
res_local_map('elk', stations = stns, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_local_map('elk', stations = stns, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
m <- m %>%
#right labs
addCircleMarkers(lng = ~Longitude[right_labs] * -1, lat = ~Latitude[right_labs], radius = 5
, weight = 0, fillOpacity = 1, color = ~color # '#444e65'
, label = loc$abbrev[right_labs]
, labelOptions = labelOptions(noHide = station_labs, direction = c('right')))
devtools::load_all(".")
res_local_map('elk', stations = stns, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_local_map('elk', stations = stns, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_local_map('elk', stations = stns, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_local_map('elk', stations = stns, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
?labelOptions
devtools::load_all(".")
res_local_map('elk', stations = stns, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_local_map('elk', stations = stns, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_local_map('elk', stations = stns, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_local_map('elk', stations = stns, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
x <- res_local_map('elk', stations = stns, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
View(x)
devtools::load_all(".")
x <- res_local_map('elk', stations = stns, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
x
devtools::load_all(".")
devtools::load_all(".")
res_local_map('elk', stations = stns, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
devtools::load_all(".")
res_local_map('elk', stations = stns, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_local_map('elk', stations = stns, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::document()
devtools::load_all(".")
devtools::document()
?addAwesomeMarkers
?addAwesomeMarkers
length(dec_icons)
exists(dec_icons)
exists('inc_icons')
stations <- sampling_stations[(sampling_stations$NERR.Site.ID == 'elk' & sampling_stations$Status == 'Active'), ]$Station.Code
to_match <- c('wq')
stns <- stations[grep(paste(to_match, collapse = '|'), stations)]
shp_fl <- elk_spatial
bounding1 <- c(-77.393, 39.741, -75.553, 38.277)
bounding2 <- c(-76.7714, -38.8196, -76.6530, 38.7402)
bounding_elk <- c(-121.810978, 36.868218, -121.708667, 36.764050)
lab_dir <- c('L', 'R', 'L', 'L', 'L')
labs <- c('ap', 'cw', 'nm', 'sm', 'vm')
pos <- 'bottomleft'
devtools::load_all(".")
devtools::document()
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = c(rep('inc', 4))), bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
res_sk_map('elk', stations = stns, sk_result = rep('inc', 4), bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = rep('inc', 4), bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
res <- rep('inc', 4)
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
lab_dir <- c('L', 'R', 'L', 'L')
labs <- c('ap', 'nm', 'sm', 'vm')
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_local_map('elk', stations = stns, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
?makeIcon
?awesomeIcons
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
?addAwesomeIcon
?addAwesomeMarkers
?addAwesomeIcons
?makeIcon
?pchIcons
pchIcons = function(pch = 0:14, width = 30, height = 30, ...) {
n = length(pch)
files = character(n)
# create a sequence of png images
for (i in seq_len(n)) {
f = tempfile(fileext = '.png')
png(f, width = width, height = height, bg = 'transparent')
par(mar = c(0, 0, 0, 0))
plot.new()
points(.5, .5, pch = pch[i], cex = min(width, height) / 8, ...)
dev.off()
files[i] = f
}
files
}
?icon
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
?makeAwesomeIcon
?addAwesomeIcon
devtools::load_all(".")
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
x <- res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
x
devtools::load_all(".")
x <- res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
x
devtools::load_all(".")
x <- res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
install.packages('glyphicon')
?makeIcon
devtools::load_all(".")
x <- res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
x <- res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
x <- res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
x
devtools::load_all(".")
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
res <- rep('dec', 4)
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
res <- ('inc', 'inc', 'dec', 'insig')
res <- c('inc', 'inc', 'dec', 'insig')
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
?install_github
devtools::document()
?addMarkers
devtools::document()
devtools::document()
packrat::snapshot()
packrat::restore()
packrat::snapshot()
packrat::restore()
packrat::restore(overwrite.dirty = TRUE)
packrat::snapshot()
packrat::snapshot(ignore.stale = T)
.libPaths()
packrat::init()
devtools::install_github('rstudio/packrat')
devtools::install_github('rstudio/packrat', force = T)
unlink("packrat/lib-R", recursive = TRUE)
