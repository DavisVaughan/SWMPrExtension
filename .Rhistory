res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
lab_dir <- c('L', 'R', 'L', 'L')
labs <- c('ap', 'nm', 'sm', 'vm')
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_local_map('elk', stations = stns, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
?makeIcon
?awesomeIcons
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
?addAwesomeIcon
?addAwesomeMarkers
?addAwesomeIcons
?makeIcon
?pchIcons
pchIcons = function(pch = 0:14, width = 30, height = 30, ...) {
n = length(pch)
files = character(n)
# create a sequence of png images
for (i in seq_len(n)) {
f = tempfile(fileext = '.png')
png(f, width = width, height = height, bg = 'transparent')
par(mar = c(0, 0, 0, 0))
plot.new()
points(.5, .5, pch = pch[i], cex = min(width, height) / 8, ...)
dev.off()
files[i] = f
}
files
}
?icon
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
?makeAwesomeIcon
?addAwesomeIcon
devtools::load_all(".")
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
x <- res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
x
devtools::load_all(".")
x <- res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
x
devtools::load_all(".")
x <- res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
install.packages('glyphicon')
?makeIcon
devtools::load_all(".")
x <- res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
x <- res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
x <- res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
x
devtools::load_all(".")
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
res <- rep('dec', 4)
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
res <- ('inc', 'inc', 'dec', 'insig')
res <- c('inc', 'inc', 'dec', 'insig')
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
devtools::load_all(".")
res_sk_map('elk', stations = stns, sk_result = res, bbox = bounding_elk, lab_loc = lab_dir, scale_pos = pos, shp = shp_fl)
?install_github
devtools::document()
?addMarkers
devtools::document()
devtools::document()
packrat::snapshot()
packrat::restore()
packrat::snapshot()
packrat::restore()
packrat::restore(overwrite.dirty = TRUE)
packrat::snapshot()
packrat::snapshot(ignore.stale = T)
.libPaths()
packrat::init()
devtools::install_github('rstudio/packrat')
devtools::install_github('rstudio/packrat', force = T)
unlink("packrat/lib-R", recursive = TRUE)
?packrat::init()
devtools::document()
devtools::load_all()
devtools::document()
?data.frame
?kendallSeasonalTrendTest
devtools::load_all(".")
devtools::load_all(".")
?seasonal_barplot
data(apaebmet)
library(SWMPr)
data(apaebmet)
dat <- qaqc(apaebmet, qaqc_keep = c('0', '3', '5'))
x <- seasonal_barplot(dat, param = 'totprcp'
, season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T)
dat <- qaqc(apaebmet, qaqc_keep = c('0', '3', '5'))
seasonal_barplot(dat, param = 'totprcp'
, season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T)
devtools::load_all(".")
x <- seasonal_barplot(dat, param = 'totprcp'
, season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T)
devtools::load_all(".")
x <- seasonal_barplot(dat, param = 'totprcp'
, season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T)
season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
x <- seasonal_barplot(dat, param = 'totprcp', season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12)), season_names = c('Winter', 'Spring', 'Summer', 'Fall'), convert = T)
devtools::load_all(".")
x <- seasonal_barplot(dat, param = 'totprcp',
season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12)),
season_names = c('Winter', 'Spring', 'Summer', 'Fall'),
convert = T)
x <- seasonal_barplot(dat, param = 'totprcp', season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12)), season_names = c('Winter', 'Spring', 'Summer', 'Fall'),convert = T)
devtools::load_all(".")
x <- seasonal_barplot(dat, param = 'totprcp', season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12)), season_names = c('Winter', 'Spring', 'Summer', 'Fall'),convert = T)
x
?annual_range
data(apacpwq)
2
do_plt <- annual_range(dat, param = 'do_mgl', target_yr = 2012)
data(apacpwq)
dat2 <- qaqc(apacpwq, qaqc_keep = c('0', '3', '5'))
do_plt <- annual_range(dat, param = 'do_mgl', target_yr = 2012)
dat2 <- qaqc(apacpwq, qaqc_keep = c('0', '3', '5'))
do_plt <- annual_range(dat, param = 'do_mgl', target_yr = 2012)
do_plt <- annual_range(dat2, param = 'do_mgl', target_yr = 2012)
devtools::load_all(".")
dat2 <- qaqc(apacpwq, qaqc_keep = c('0', '3', '5'))
do_plt <- annual_range(dat2, param = 'do_mgl', target_yr = 2012)
devtools::load_all(".")
do_plt <- annual_range(dat2, param = 'do_mgl', target_yr = 2012)
?compelte
?complete
devtools::load_all(".")
do_plt <- annual_range(dat2, param = 'do_mgl', target_yr = 2012)
do_plt
devtools::load_all(".")
do_plt <- annual_range(dat2, param = 'do_mgl', target_yr = 2012)
?tidyr::complete
complete
complete()
library(tidyr)
do_plt <- annual_range(dat2, param = 'do_mgl', target_yr = 2012)
tidyr::complete()
complete()
tidyr::complete(
tidyr::complete
devtools::load_all(".")
do_plt <- annual_range(dat2, param = 'do_mgl', target_yr = 2012)
do_plt
x <- seasonal_barplot(dat, param = 'totprcp', season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12)), season_names = c('Winter', 'Spring', 'Summer', 'Fall'),convert = T)
x
devtools::load_all(".")
x <- seasonal_barplot(dat, param = 'totprcp', season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12)), season_names = c('Winter', 'Spring', 'Summer', 'Fall'),convert = T)
devtools::load_all(".")
x <- seasonal_barplot(dat, param = 'totprcp', season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12)), season_names = c('Winter', 'Spring', 'Summer', 'Fall'),convert = T)
devtools::load_all(".")
x <- seasonal_barplot(dat, param = 'totprcp', season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12)), season_names = c('Winter', 'Spring', 'Summer', 'Fall'),convert = T)
devtools::load_all(".")
x <- seasonal_barplot(dat, param = 'totprcp', season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12)), season_names = c('Winter', 'Spring', 'Summer', 'Fall'),convert = T)
x
devtools::load_all(".")
x <- seasonal_barplot(dat, param = 'totprcp', season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12)), season_names = c('Winter', 'Spring', 'Summer', 'Fall'),convert = T)
devtools::load_all(".")
x <- seasonal_barplot(dat, param = 'totprcp', season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12)), season_names = c('Winter', 'Spring', 'Summer', 'Fall'),convert = T)
?seasonal_barplot
x <- seasonal_barplot(dat, param = 'totprcp'
, season = list(c(1:6), c(7:12))
, season_names = c('Wet', 'Dry')
, convert = T)
?assign_season
chk <- assign_season(dt, season = list(c(1:6), c(7:12)), season_names = c('Wet', 'Dry'))
chk <- assign_season(as.POSIXct(dt), season = list(c(1:6), c(7:12)), season_names = c('Wet', 'Dry'))
dt <- dat$datetimestamp
chk <- assign_season(dt, season = list(c(1:6), c(7:12)), season_names = c('Wet', 'Dry'))
head(chk)
chk <- assign_season(dt, season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12)), season_names = c('Winter', 'Spring', 'Summer', 'Fall'))
devtools::load_all(".")
x <- seasonal_barplot(dat, param = 'totprcp', season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12)), season_names = c('Winter', 'Spring', 'Summer', 'Fall'),convert = T)
x
devtools::load_all(".")
x <- seasonal_barplot(dat, param = 'totprcp', season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12)), season_names = c('Winter', 'Spring', 'Summer', 'Fall'),convert = T)
x
devtools::load_all(".")
x <- seasonal_barplot(dat, param = 'totprcp', season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12)), season_names = c('Winter', 'Spring', 'Summer', 'Fall'),convert = T)
x
x <- seasonal_barplot(dat, param = 'totprcp', season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12)), season_names = c('Winter', 'Spring', 'Summer', 'Fall'),convert = T, season_facet = T)
x
data(apaebmet)
dat <- qaqc(apaebmet, qaqc_keep = c('0', '3', '5'))
dat$totprcp <- dat$totprcp / 25.4
x <- seasonal_barplot(dat, param = 'totprcp', season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12)), season_names = c('Winter', 'Spring', 'Summer', 'Fall'),convert = T)
x
y <- seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, season_facet = T)
y
dat %>% group_by(year(datetimestamp)) %>% summarise(prcp = sum(totprcp, na.rm = T))
library(dplyr)
dat %>% group_by(year(datetimestamp)) %>% summarise(prcp = sum(totprcp, na.rm = T))
library(lubridate)
dat %>% group_by(year(datetimestamp)) %>% summarise(prcp = sum(totprcp, na.rm = T))
devtools::load_all(".")
y <- seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = T)
y
devtools::load_all(".")
y <- seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = T)
y
devtools::load_all(".")
y <- seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = T)
devtools::load_all(".")
y <- seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = T)
y
levels(y$season)
devtools::load_all(".")
devtools::load_all(".")
y <- seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = T)
y
devtools::load_all(".")
y <- seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = T)
y
y <- seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = F)
y
?geom_hline
devtools::load_all(".")
y <- seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = F)
y
y <- seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = T)
y
devtools::load_all(".")
y <- seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = T)
y
devtools::document()
?seq
devtools::load_all(".")
seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = T)
devtools::load_all(".")
seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = T)
dat$totprcp <- dat$totprcp * 25.4
seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = T)
max(dat$totprcp)
max(dat$totprcp, na.rm = T)
dat %>% group_by(year(datetimestamp)) %>% summarise(tot = sum(totprcp))
dat %>% group_by(year(datetimestamp)) %>% summarise(tot = sum(totprcp, na.rm = T))
devtools::load_all(".")
dat %>% group_by(year(datetimestamp)) %>% summarise(tot = sum(totprcp, na.rm = T))
seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = T)
devtools::load_all(".")
seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = T)
seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = F
, hist_avg = T
, season_facet = T)
devtools::load_all(".")
seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = F
, hist_avg = T
, season_facet = T)
devtools::load_all(".")
seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = F
, hist_avg = T
, season_facet = T)
devtools::load_all(".")
seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = F
, hist_avg = T
, season_facet = T)
devtools::load_all(".")
mx <- ceiling(max(yr_mx$max_val) / 10) * 10 * 1.1
seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = F
, hist_avg = T
, season_facet = T)
devtools::load_all(".")
seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = F
, hist_avg = T
, season_facet = T)
devtools::load_all(".")
seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = F
, hist_avg = T
, season_facet = T)
?colorRampPalette
colorRampPalette(9, 'Blues')(10)
cols <- colorRampPalette(brewer.pal(9, 'Blues'))
library(RColorBrewer)
library(RColorBrewer)
cols <- colorRampPalette(brewer.pal(9, 'Blues'))
cols(22)
cols(4)
cols(4) %>% rev
devtools::load_all(".")
seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = T)
seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = F)
devtools::load_all(".")
seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = F)
devtools::load_all(".")
seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = F)
devtools::load_all(".")
seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = F)
cols <- cols(length(unique(dat_hist$season)) + 1)
devtools::load_all(".")
seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = F)
devtools::load_all(".")
seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = F)
seasonal_barplot(dat, param = 'totprcp'
, convert = T
, hist_avg = T
, season_facet = F)
devtools::load_all(".")
seasonal_barplot(dat, param = 'totprcp'
, convert = T
, hist_avg = T
, season_facet = F)
devtools::load_all(".")
seasonal_barplot(dat, param = 'totprcp'
, convert = T
, hist_avg = T
, season_facet = F)
devtools::load_all(".")
?colorRampPalette
?grDevices
devtools::document()
devtools::document()
devtools::load_all(".")
?brewer.pal
devtools::load_all(".")
devtools::load_all(".")
seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = F)
devtools::load_all(".")
seasonal_barplot(dat, param = 'totprcp'
, season_grps = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12))
, season_names = c('Winter', 'Spring', 'Summer', 'Fall')
, convert = T
, hist_avg = T
, season_facet = F)
?threshold_identification
?historical_daily_range
data(apacpwq)
dat <- apacpwq
dat <- qaqc(apacpwq, qaqc_keep = c('0', '3', '5'))
y <- historical_daily_range(dat, param = 'do_mgl', target_yr = 2013, criteria = 2, abb = T)
y
?threshold_identification
?threshold_identification
devtools::load_all(".")
?threshold_identification
?annual_range
?threshold_identification
devtools::load_all(".")
?threshold_identification
devtools::load_all(".")
?threshold_identification
?annual_range
?threshold_identification
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
