dat_grp$x_lab <- seq(from = 1, to = length(dat_grp$grp_join), by = 1)
x_lab
View(dat_grp)
install_version("dplyr", version = "0.7.8", repos = "http://cran.us.r-project.org")
devtools::install_version("dplyr", version = "0.7.8", repos = "http://cran.us.r-project.org")
detach('dplyr')
detach('package:dplyr', unload = T)
devtools::load_all(".")
swmpr_in = dat_wq
param = 'do_mgl'
parameter_threshold = 2
threshold_type = '<'
time_threshold = 2
summary_type = 'month'
plot_title = TRUE
pal = 'Set3'
plot = T
label_y_axis = T
dat <- swmpr_in
parm <- sym(param)
dat_wq <- qaqc(apacpwq, qaqc_keep = c(0, 3, 5))
dat_wq <- setstep(dat_wq)
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
devtools::load_all(".")
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
devtools::load_all(".")
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
devtools::load_all(".")
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
devtools::load_all(".")
x <-
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
View(x)
tibble(
x = 1:2,
f = factor(c("a", "b"), levels = c("a", "b", "c"))
) %>%
group_by(f)
library(dplyr)
tibble(
x = 1:2,
f = factor(c("a", "b"), levels = c("a", "b", "c"))
) %>%
group_by(f)
devtools::load_all(".")
x <-
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
dummy <- x[[1]]
summary <- x[[2]]
View(dummy)
View(summary)
?group_by
View(dummy)
dat_grp <- x[[3]]
View(dat_grp)
devtools::load_all(".")
## Water quality examples
dat_wq <- qaqc(apacpwq, qaqc_keep = c(0, 3, 5))
dat_wq <- setstep(dat_wq)
x <-
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
dummy <- x[[1]]
summary <- x[[2]]
dat_grp <- x[[3]]
View(summary)
View(dummy)
View(summary)
devtools::load_all(".")
x <-
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
dat_threshold <- x
View(dat_threshold)
summary2 <- dat_threshold %>%
group_by(year, month, season) %>%
summarise(count = n())
library(dplyr)
summary2 <- dat_threshold %>%
group_by(year, month, season) %>%
summarise(count = n())
View(summary2)
dat_threshold$season <- as.character(dat_threshold$season)
summary2 <- dat_threshold %>%
group_by(year, month, season) %>%
summarise(count = n())
View(summary2)
summary <- dat_threshold %>%
group_by(year, month, season) %>%
summarise(count = n())
grp_ct <- as.numeric(length(unique(levels(summary$season))))
dat_threshold <- x
summary <- dat_threshold %>%
group_by(year, month, season) %>%
summarise(count = n())
grp_ct <- as.numeric(length(unique(levels(summary$season))))
dat_threshold$season <- as.character(dat_threshold$season)
summary <- dat_threshold %>%
group_by(year, month, season) %>%
summarise(count = n())
grp_ct <- as.numeric(length(unique((summary$season))))
grp_nm <- as.character(unique((summary$season)))
# grp_ct <- as.numeric(length(unique(levels(summary$season))))
# grp_nm <- as.character(unique(levels(summary$season)))
summary$grp_join <- as.character(summary$season)
View(summary)
dummy <- data.frame(grp_join = rep(grp_nm, yr_ct)
, year = rep(c(mn_yr:mx_yr), each = grp_ct)
, stringsAsFactors = F)
dat_grp <- left_join(dummy, summary)
dat_grp$count[is.na(dat_grp$count)] <- 0
mn_yr <- min(lubridate::year(dat$datetimestamp))
mn_yr <- 2012
mx_yr <- 2013
grp_ct <- as.numeric(length(unique((summary$season))))
grp_nm <- as.character(unique((summary$season)))
summary$grp_join <- as.character(summary$season)
dummy <- data.frame(grp_join = rep(grp_nm, yr_ct)
, year = rep(c(mn_yr:mx_yr), each = grp_ct)
, stringsAsFactors = F)
dat_grp <- left_join(dummy, summary)
dat_grp$count[is.na(dat_grp$count)] <- 0
yr_ct <- mx_yr - mn_yr + 1
dummy <- data.frame(grp_join = rep(grp_nm, yr_ct)
, year = rep(c(mn_yr:mx_yr), each = grp_ct)
, stringsAsFactors = F)
dat_grp <- left_join(dummy, summary)
dat_grp$count[is.na(dat_grp$count)] <- 0
dummy <- data.frame(grp_join = rep(grp_nm, yr_ct)
, year = rep(c(mn_yr:mx_yr), each = grp_ct)
, stringsAsFactors = F)
View(summary)
?group_by
dat_threshold <- x
summary <- dat_threshold %>%
group_by(year, month, season) %>%
summarise(count = n())
# grp_ct <- as.numeric(length(unique((summary$season))))
# grp_nm <- as.character(unique((summary$season)))
grp_ct <- as.numeric(length(unique(levels(summary$season))))
grp_nm <- as.character(unique(levels(summary$season)))
summary$grp_join <- as.character(summary$season)
dummy <- data.frame(grp_join = rep(grp_nm, yr_ct)
, year = rep(c(mn_yr:mx_yr), each = grp_ct)
, stringsAsFactors = F)
View(dummy)
View(summary)
dat_grp <- left_join(dummy, summary)
View(dat_grp)
dat_grp <- left_join(dummy, summary, by = 'grp_join')
View(dat_grp)
View(dummy)
View(summary)
View(dat_threshold)
summary <- summary %>% filter(count > 0)
View(summary)
dummy <- data.frame(grp_join = rep(grp_nm, yr_ct)
, year = rep(c(mn_yr:mx_yr), each = grp_ct)
, stringsAsFactors = F)
dat_grp <- left_join(dummy, summary)
View(dummy)
View(dat_grp)
dat_grp$count[is.na(dat_grp$count)] <- 0
dat_grp$x_lab <- seq(from = 1, to = length(dat_grp$grp_join), by = 1)
View(dat_grp)
by_arg <- ifelse(summary_type == 'year', 1, length(unique(levels(dat_grp$grp_join))))
brks <- seq(from = 1, to = max(dat_grp$x_lab), by = by_arg)
devtools::load_all(".")
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
devtools::load_all(".")
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
devtools::load_all(".")
x <-
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
dat_grp <- x
by_arg <- ifelse(summary_type == 'year', 1, length(unique(levels(dat_grp$grp_join))))
devtools::load_all(".")
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
dat_wq <- qaqc(apacpwq, qaqc_keep = c(0, 3, 5))
dat_wq <- setstep(dat_wq)
x <-
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
x
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2,
threshold_type = '<', time_threshold = 2, summary_type = 'season',
season = list(c(1,2,3), c(4,5,6), c(7,8,9), c(10, 11, 12)),
season_names = c('Winter', 'Spring', 'Summer', 'Fall'),
season_start = 'Winter',
plot_title = TRUE)
devtools::build_win()
?seasonal_boxplot
devtools::load_all(".")
?seasonal_boxplot
dat <- elksmwq
dat <- qaqc(dat, qaqc_keep = c('0', '3', '5'))
View(dat)
min(dat$depth, na.rm = T)
do_plt <-
seasonal_boxplot(dat, param = 'sal')
seasonal_boxplot(dat, param = 'sal')
devtools::load_all(".")
seasonal_boxplot(dat, param = 'sal')
devtools::load_all(".")
seasonal_boxplot(dat, param = 'sal')
?threshold_summary
dat_wq <- qaqc(apacpwq, qaqc_keep = c(0, 3, 5))
dat_wq <- setstep(dat_wq)
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
devtools::load_all(".")
devtools::load_all(".")
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
devtools::load_all(".")
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
devtools::load_all(".")
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
devtools::load_all(".")
?threshold_percentile_plot
dat_wq <- qaqc(elksmwq, qaqc_keep = c(0, 3, 5))
dat_wq <- subset(dat_wq, subset = '2007-01-01 0:00', operator = '>=')
threshold_percentile_plot(dat_wq, param = 'do_mgl'
, hist_rng = c(2007, 2014), by_month = FALSE)
devtools::load_all(".")
?threshold_criteria_plot
threshold_criteria_plot(dat_wq, param = 'do_mgl'
, rng = 2012
, thresholds = c(2, 5)
, threshold_labs = c('Poor', 'Fair', 'Good')
, monthly_smooth = TRUE
, threshold_cols = c('#FEC596', '#FFFFCC', '#ABD9E9'))
devtools::load_all(".")
?historical_daily_range
data(apacpwq)
dat <- apacpwq
dat <- qaqc(apacpwq, qaqc_keep = c('0', '3', '5'))
historical_daily_range(dat, param = 'do_mgl', target_yr = 2013, criteria = 2)
View(apacpwq)
min(apacpwq$cdepth, na.rm = T)
min(apacpwq$level, na.rm = T)
min(apacpwq$clevel, na.rm = T)
?seasonal_boxplot
dat <- elksmwq
dat <- qaqc(dat, qaqc_keep = c('0', '3', '5'))
seasonal_boxplot(dat, param = 'sal')
devtools::load_all(".")
source('C:/Users/Julie/Desktop/SWMPrExtension/R/seasonal_boxplot_alt.R', echo=TRUE)
?seasonal_boxplot_alt
dat <- elksmwq
dat <- qaqc(dat, qaqc_keep = c('0', '3', '5'))
seasonal_boxplot_alt(dat, param = 'do_mgl')
devtools::load_all(".")
seasonal_boxplot_alt(dat, param = 'do_mgl')
library(dplyr)
seasonal_boxplot_alt(dat, param = 'do_mgl')
seasonal_boxplot_alt(dat, param = 'sal')
devtools::load_all(".")
seasonal_boxplot_alt(dat, param = 'sal')
devtools::load_all(".")
seasonal_boxplot_alt(dat, param = 'sal')
devtools::load_all(".")
seasonal_boxplot_alt(dat, param = 'sal')
devtools::load_all(".")
seasonal_boxplot_alt(dat, param = 'sal')
devtools::load_all(".")
seasonal_boxplot_alt(dat, param = 'sal')
seasonal_boxplot(dat, param = 'sal')
seasonal_boxplot(dat, param = 'sal')
?seasonal_boxplot_alt
devtools::load_all(".")
seasonal_boxplot(dat, param = 'sal')
devtools::load_all(".")
devtools::load_all(".")
seasonal_boxplot(dat, param = 'sal')
devtools::load_all(".")
seasonal_boxplot(dat, param = 'sal')
devtools::load_all(".")
devtools::load_all(".")
seasonal_boxplot(dat, param = 'sal')
rlang::last_error()
devtools::load_all(".")
rlang::last_error()
seasonal_boxplot(dat, param = 'sal')
devtools::load_all(".")
seasonal_boxplot(dat, param = 'sal', free_y = T)
seasonal_boxplot(dat, param = 'ph', free_y = T)
dat2 <- dat
dat2$sal[1:3] <- c(-5, -2, -1.5)
dat2 <- dat
dat2$sal[1:3] <- c(-5, -2, -1.5)
seasonal_boxplot(dat, param = 'sal', free_y = T)
View(dat)
seasonal_boxplot(dat2, param = 'sal', free_y = T)
View(dat2)
devtools::load_all(".")
seasonal_boxplot(dat2, param = 'sal', free_y = T)
min(dat2$sal)
min(dat2$sal, na.rm = T)
devtools::load_all(".")
raw_boxplot(dat2, param = 'sal', free_y = T)
dat2$sal[1:3] <- c(-50, -2, -1.5)
raw_boxplot(dat2, param = 'sal', free_y = T)
raw_boxplot(dat2, param = 'ph', free_y = T)
raw_boxplot(dat2, param = 'ph', free_y = F)
raw_boxplot(dat2, param = 'turb', free_y = F, log_trans = T)
raw_boxplot(dat2, param = 'turb', free_y = T, log_trans = T)
?pretty
devtools::load_all(".")
?annual_range
data(elksmwq)
dat <- elksmwq
dat <- qaqc(elksmwq, qaqc_keep = c('0', '3', '5'))
do_plt <- annual_range(dat, param = 'ph', target_yr = 2012, free_y = T)
do_plt <- annual_range(dat, param = 'sal', target_yr = 2012, free_y = T)
do_plt <- annual_range(dat, param = 'sal', target_yr = 2012, criteria = 2, free_y = T)
do_plt <- annual_range(dat, param = 'sal', target_yr = 2012, criteria = 2)#, free_y = T)
annual_range(dat, param = 'sal', target_yr = 2012, criteria = 2)#, free_y = T)
do_plt <-
annual_range(dat, param = 'sal', target_yr = 2012, free_y = T)
annual_range(dat, param = 'sal', target_yr = 2012, free_y = T)
annual_range(dat, param = 'sal', target_yr = 2012, free_y = F)
annual_range(dat, param = 'ph', target_yr = 2012, free_y = F)
# do_plt <-
annual_range(dat, param = 'ph', target_yr = 2012, free_y = T)
View(dat_wq)
chk <- dat_wq %>% filter(year(datetimstamp = 2016))
# do_plt <-
annual_range(dat, param = 'ph', target_yr = 2013, free_y = T)
# do_plt <-
annual_range(dat, param = 'sal', target_yr = 2013, free_y = T)
?pretty_breaks
# do_plt <-
annual_range(dat, param = 'sal', target_yr = 2016, free_y = T)
devtools::load_all(".")
# do_plt <-
annual_range(dat, param = 'sal', target_yr = 2016, free_y = T)
?pretty_breaks
pretty_breaks()(1:100)
library(scales)
pretty_breaks()(1:100)
?range
pretty_breaks()(range(dat$sal))
range(dat$sal)
range(dat$sal, na.rm = T)
pretty_breaks()(range(dat$sal, na.rm = T))
pretty_breaks(n = 8)(range(dat$sal, na.rm = T))
devtools::load_all(".")
# do_plt <-
annual_range(dat, param = 'sal', target_yr = 2016, free_y = T)
devtools::load_all(".")
# do_plt <-
annual_range(dat, param = 'sal', target_yr = 2016, free_y = T)
devtools::load_all(".")
# do_plt <-
annual_range(dat, param = 'sal', target_yr = 2016, free_y = T)
devtools::load_all(".")
annual_range(dat, param = 'sal', target_yr = 2016, free_y = T)
tmp <- annual_range(dat, param = 'sal', target_yr = 2016, free_y = T)
min(tmp)
range(tmp[ , c(2:5)])
devtools::load_all(".")
devtools::load_all(".")
# do_plt <-
annual_range(dat, param = 'sal', target_yr = 2016, free_y = T)
devtools::load_all(".")
# do_plt <-
annual_range(dat, param = 'sal', target_yr = 2016, free_y = T)
devtools::load_all(".")
# do_plt <-
annual_range(dat, param = 'sal', target_yr = 2016, free_y = T)
devtools::load_all(".")
# do_plt <-
annual_range(dat, param = 'sal', target_yr = 2016, free_y = T)
devtools::load_all(".")
annual_range(dat, param = 'sal', target_yr = 2016, free_y = T)
annual_range(dat, param = 'ph', target_yr = 2016, free_y = T)
devtools::load_all(".")
x <- annual_range(dat, param = 'ph', target_yr = 2016, free_y = T)
View(x)
View(dat)
chk <- dat %>% filter(year(datetimestamp == 2016))
chk <- dat %>% filter(year(datetimestamp) == 2016)
library(lubridate)
chk <- dat %>% filter(year(datetimestamp) == 2016)
View(chk)
chk <- chk %>% filter(month(datetimestamp) == 1)
View(chk)
min(chk$ph)
min(chk$ph, na.rm = T)
View(x)
devtools::load_all(".")
# do_plt <-
annual_range(dat, param = 'sal', target_yr = 2016, free_y = T)
devtools::load_all(".")
# do_plt <-
annual_range(dat, param = 'sal', target_yr = 2016, free_y = T)
# do_plt <-
annual_range(dat, param = 'ph', target_yr = 2016, free_y = T)
# chk <- dat %>% filter(year(datetimestamp) == 2016)
chk <- dat %>% filter(year(datetimestamp) == 2016)
View(chk)
min(chk$ph, na.rm = T)
devtools::load_all(".")
annual_range(dat, param = 'ph', target_yr = 2016, free_y = T)
tmp <- annual_range(dat, param = 'ph', target_yr = 2016, free_y = T)
tmp
tmp[is.nan(tmp)] <- NA
tmp[ , is.nan(tmp)] <- NA
tmp[is.nan(tmp), ] <- NA
tmp[, c(2:5)][is.nan(tmp[, c(2:5)]), ] <- NA
tmp[, c(2:5)]
tmp[is.nan(tmp[, c(2:5)]), ] <- NA
replace(tmp, is.na(tmp), 0)
replace(tmp, is.na(tmp), NA)
replace(tmp, is.infinite(tmp), NA)
replace(tmp, is.finite(tmp), NA)
?is.infinite
devtools::load_all(".")
annual_range(dat, param = 'sal', target_yr = 2016, free_y = T)
annual_range(dat, param = 'ph', target_yr = 2016, free_y = T)
devtools::load_all(".")
annual_range(dat, param = 'ph', target_yr = 2016, free_y = T)
# do_plt <-
x <- annual_range(dat, param = 'ph', target_yr = 2016, free_y = T)
View(x)
is.infinite(x[1, 2])
is.infinite(x[[1, 2]])
is.infinite(x[[1, 3]])
x[[, c(2:5)]] <- lapply(dat_month[[, c(2:5)]], function(x) {})
x[[, c(2:5)]]
x
dat_month[, c(2:5)] <- lapply(dat_month[, c(2:5)], function(x) {})
x[, c(2:5)] <- lapply(x[, c(2:5)], function(x) {is.nan(x)<- NA})
devtools::load_all(".")
# do_plt <-
x <- annual_range(dat, param = 'ph', target_yr = 2016, free_y = T)
x
x[, c(2:5)] <- lapply(x[, c(2:5)], function(x) {is.nan(x) <- NA})
?is.nan
lapply(x[, c(2:5)], function(x) {is.nan(x) <- NA})
x[, c(2:5)] <- lapply(x[, c(2:5)], function(x) {x[is.nan(x)] <- NA})
x
# do_plt <-
x <- annual_range(dat, param = 'ph', target_yr = 2016, free_y = T)
x
lapply(x[, c(2:5)], function(x) {x[is.nan(x)] <- NA})
x[, c(2:5)] <- lapply(x[, c(2:5)], function(x) {x[, is.nan(x)] <- NA})
replace(x, is.na(x), 0)
# do_plt <-
x <- annual_range(dat, param = 'ph', target_yr = 2016, free_y = T)
replace(x, is.na(x), NA)
devtools::load_all(".")
# do_plt <-
x <- annual_range(dat, param = 'ph', target_yr = 2016, free_y = T)
replace(x, is.na(x), 0)
# replace any
dat_month <- replace(dat_month, is.na(dat_month), NA)
replace(x, is.na(x), NA)
replace(x, is.infinite(x), NA)
replace(x[, c(2:5)], is.infinite(x[, c(2:5)]), NA)
lapply(x[, c(2:5)], function(x) {replace(x, is.infinite(x), NA)})
x[, c(2:5)] <- lapply(x[, c(2:5)], function(x) {replace(x, is.infinite(x), NA)})
x
x[, c(2:5)] <- lapply(x[, c(2:5)], function(x) {replace(x, is.infinite(x), NA)})
x
?replace
# do_plt <-
x <- annual_range(dat, param = 'ph', target_yr = 2016, free_y = T)
# replace any
return(dat_month)
devtools::load_all(".")
x[, c(2:5)] <- lapply(x[, c(2:5)], function(x) {x[, is.nan(x)] <- NA})
# do_plt <-
x <- annual_range(dat, param = 'ph', target_yr = 2016, free_y = T)
x
x[, c(2:5)] <- lapply(x[, c(2:5)], function(x) {replace(x, c('NaN', '-Inf', 'Inf'), NA)})
?replace_with_na
library(tidyr)
?replace_with_na
