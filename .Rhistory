devtools::run_examples()
?RES_NATIONAL_MAP
?res_national_map
library(tictoc)
tic()
##Just the national map
res_national_map()
##National map highlighting states with NERRS
nerr_states <- c('01', '02', '06', '10', '12', '13', '15'
, '23', '24', '25', '27', '28', '33', '34', '36', '37', '39'
, '41', '44', '45', '48', '51', '53', '55', '72')
res_national_map(highlight_states = nerr_states)
##National map highlighting west coast states and NERRS (including AK)
nerr_states_west <- c('02', '06', '41', '53')
nerrs_codes <- c('pdb', 'sos', 'sfb', 'elk', 'tjr', 'kac')
res_national_map(highlight_states = nerr_states_west, highlight_reserve = nerrs_codes)
toc()
tic()
##National map highlighting states with NERRS
nerr_states <- c('01', '02', '06', '10', '12', '13', '15'
, '23', '24', '25', '27', '28', '33', '34', '36', '37', '39'
, '41', '44', '45', '48', '51', '53', '55', '72')
res_national_map(highlight_states = nerr_states)
##National map highlighting west coast states and NERRS (including AK)
nerr_states_west <- c('02', '06', '41', '53')
nerrs_codes <- c('pdb', 'sos', 'sfb', 'elk', 'tjr', 'kac')
res_national_map(highlight_states = nerr_states_west, highlight_reserve = nerrs_codes)
toc()
devtools::build_win()
devtools::release()
?threshold_summary
devtools::load_all(".")
?threshold_summary
unlink('packrat/lib-R', recursive = TRUE)
devtools::load_all(".")
?res_sk_map
library(SWMPrExtension)
install.packages('EnvStats')
build_win
devtools::build_win()
devtools:build_win()
devtools::build_win()
release()
devtools::release()
1
devtools::release()
install.packages('flextable')
devtools::release()
install.packages(c('SWMPr', 'broom', 'dplyr', 'EnvStats', 'ggplot2', 'ggthemes', 'leaflet', 'tidyr'))
devtools::release()
devtools::release()
gpcPermitStatus
gpcPermitStatus()
devtools::release()
devtools::release()
load('bcnut2014.RData')
load('bcnut.RData')
threshold_percentile_plot(bcnut2014, param = 'nh4f')
devtools::load_all(".")
threshold_percentile_plot(bcnut2014, param = 'nh4f')
install.packages('broom')
View(bcnut2014)
library(SWMPrExtension)
devtools::load_all(".")
library(broom)
install.packages(rlang)
install.packages('rlang')
devtools::load_all(".")
install.packages('rlang')
devtools::load_all(".")
install.packages('roxygen2')
devtools::load_all(".")
load('bcnut.RData')
threshold_percentile_plot(bcnut2014, param = 'nh4f')
devtools::load_all(".")
threshold_percentile_plot(bcnut2014, param = 'nh4f')
devtools::load_all(".")
threshold_percentile_plot(bcnut2014, param = 'nh4f')
devtools::load_all(".")
threshold_percentile_plot(bcnut2014, param = 'nh4f')
x <- threshold_percentile_plot(bcnut2014, param = 'nh4f')
mn <- ifelse(x < 0.05, x, 0.05))
mn <- ifelse(x < 0.05, x, 0.05)
ceiling(mn/0.01) * 0.01
devtools::load_all(".")
threshold_percentile_plot(bcnut2014, param = 'nh4f')
threshold_percentile_plot(bcnut2014, param = 'nh4f', by_month = F)
View(bcnut2014)
floor(mn/0.01) * 0.01
floor(mn)
ceiling(mn)
threshold_percentile_plot(bcnut2014, param = 'chla_n', by_month = F)
threshold_percentile_plot(bcnut2014, param = 'chla_n', by_month = F, target_yr = 2014)
load(apacpwq)
data(apacpwq)
data('elksmwq')
x <- threshold_percentile_plot(elksmwq, param = 'level')
elksmwq <- qaqc(elksmwq, qaqc_keep = c(0, 3, 5))
y <- threshold_percentile_plot(elksmwq, param = 'level')
y
ceiling(-1.2)
floor(-1.2)
z <- threshold_percentile_plot(bcnut2014, param = 'chla_n')
z
min(bcnut2014$chla_n, na.rm = T)
mn_chl <- min(bcnut2014$chla_n, na.rm = T)
floor(min_chl/0.01) * 0.01
floor(mn_chl/0.01) * 0.01
View(bcnut2014)
devtools::load_all(".")
threshold_percentile_plot(bcnut2014, param = 'chla_n')
devtools::load_all(".")
threshold_percentile_plot(bcnut2014, param = 'chla_n')
devtools::load_all(".")
threshold_percentile_plot(bcnut2014, param = 'chla_n')
devtools::load_all(".")
threshold_percentile_plot(bcnut2014, param = 'chla_n')
devtools::load_all(".")
threshold_percentile_plot(bcnut2014, param = 'chla_n')
devtools::load_all(".")
devtools::load_all(".")
threshold_percentile_plot(bcnut2014, param = 'chla_n')
devtools::load_all(".")
threshold_percentile_plot(bcnut2014, param = 'chla_n')
devtools::load_all(".")
threshold_percentile_plot(bcnut2014, param = 'chla_n')
devtools::load_all(".")
devtools::load_all(".")
threshold_percentile_plot(bcnut2014, param = 'chla_n')
threshold_percentile_plot(bcnut2014, param = 'nh4f')
threshold_percentile_plot(bcnut2014, param = 'nh4f', log_trans = T)
threshold_percentile_plot(bcnut2014, param = 'nh4f', log_trans = T, percentiles = 0.05)
threshold_percentile_plot(bcnut2014, param = 'nh4f', log_trans = F, percentiles = 0.05)
threshold_percentile_plot(elksmwq, param = 'level', log_trans = F, percentiles = 0.05)
View(elksmwq)
threshold_percentile_plot(elksmwq, param = 'level', log_trans = F)
devtools::load_all(".")
threshold_percentile_plot(elksmwq, param = 'level', log_trans = F, percentiles = 0.05)
devtools::load_all(".")
threshold_percentile_plot(elksmwq, param = 'level', log_trans = F, percentiles = 0.05)
percentile(elksmwq$level, 0.05)
quantile(elksmwq$level, 0.05)
quantile(elksmwq$level, 0.05, na.rm = T)
min(elksmwq$level, na.rm = T)
devtools::load_all(".")
threshold_percentile_plot(elksmwq, param = 'level', log_trans = F, percentiles = 0.05)
devtools::load_all(".")
threshold_percentile_plot(elksmwq, param = 'level', log_trans = F, percentiles = 0.05)
devtools::load_all(".")
threshold_percentile_plot(elksmwq, param = 'level', log_trans = F, percentiles = 0.05)
devtools::load_all(".")
threshold_percentile_plot(elksmwq, param = 'level', log_trans = F, percentiles = 0.05)
devtools::load_all(".")
threshold_percentile_plot(elksmwq, param = 'level', log_trans = F, percentiles = 0.05)
threshold_percentile_plot(elksmwq, param = 'level', log_trans = F)
devtools::load_all(".")
threshold_percentile_plot(elksmwq, param = 'level', log_trans = F)
devtools::load_all(".")
threshold_percentile_plot(elksmwq, param = 'level', log_trans = F)
devtools::load_all(".")
threshold_percentile_plot(elksmwq, param = 'level', log_trans = F, percentiles = 0.05)
raw_boxplot(bcnut2014)
raw_boxplot(bcnut2014, parm = 'nh4f')
raw_boxplot(bcnut2014, param = 'nh4f')
seasonal_range(bcnut2014, param = 'nh4f')
historical_range(bcnut2014, param = 'nh4f')
?critical_threshold_plot
devtools::load_all(".")
?threshold_plot
?percentile_plot
library(SWMPrExtension)
?threshold_plot
raw_boxplot(bcnut2014, param = 'nh4f')
?threshold_criteria_plot
threshold_criteria_plot(bcnut2014, param = 'nh4f'
, thresholds = c(0.05, 0.1)
, threshold_labs = c('Good', 'Fair', 'Poor'))
?historical_daily_range
historical_daily_range(elksmwq, param = 'do_mgl', target_yr = 2013)
historical_daily_range(elksmwq, param = 'do_mgl', range = c(2013, 2014), target_yr = 2015)
historical_daily_range(elksmwq, param = 'do_mgl', hist_rng = c(2013, 2014), target_yr = 2015)
?seasonal_boxplot
seasonal_boxplot(elksmwq, param = 'do_mgl',
target_yr = 2015)
?seasonal_boxplot
seasonal_boxplot(elksmwq, param = 'do_mgl'
, hist_rng = c(2013, 2014)
, target_yr = 2015)
seasonal_boxplot(elksmwq, param = 'do_mgl'
# , hist_rng = c(2013, 2014)
, target_yr = 2015)
library(SWMPrExtension)
install.packages('rgdal')
install.packages('rgdal')
devtools::build_win()
devtools::build_win()
devtools::load_all(".")
?historical_daily_range
data(elksmwq)
dat <- elksmwq
dat <- qaqc(dat, qaqc_keep = c('0', '3', '5'))
historical_daily_range(dat, param = 'do_mgl', target_yr = 2013, criteria = 2)
range(dat$datetimestamp)
y <-
historical_daily_range(dat, param = 'do_mgl', target_yr = 2014, criteria = 2)
historical_daily_range(dat, param = 'do_mgl', target_yr = 2014, hist_rng = c(2015, 2016), criteria = 2)
devtools::load_all(".")
?historical_range
historical_range(dat, param = 'do_mgl', target_yr = 2013, criteria = 2)
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2014, 2016), criteria = 2)
historical_range(dat, param = 'do_mgl', target_yr = 2013, criteria = 2)
?historical_range
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2013, 2016))
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2015, 2016))
devtools::load_all(".")
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2013, 2016))
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2015, 2016))
devtools::load_all(".")
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2013, 2016))
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2015, 2016))
devtools::load_all(".")
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2013, 2016))
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2015, 2016))
devtools::load_all(".")
devtools::load_all(".")
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2013, 2016))
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2015, 2016))
historical_daily_range(dat, param = 'do_mgl', target_yr = 2014, hist_rng = c(2015, 2016), criteria = 2)
historical_daily_range(dat, param = 'do_mgl', target_yr = 2014, hist_rng = c(2015, 2016))
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2013, 2016))
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2015, 2016))
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2014, 2016))
devtools::load_all(".")
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2015, 2016))
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2014, 2016))
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2013, 2016))
devtools::load_all(".")
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2013, 2016))
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2015, 2016))
devtools::load_all(".")
devtools::load_all(".")
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2013, 2016))
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2015, 2016))
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2014, 2016))
devtools::load_all(".")
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2014, 2016))
devtools::load_all(".")
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2013, 2016))
devtools::load_all(".")
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2013, 2016))
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2015, 2016))
x <- historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2013, 2016))
y <- historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2015, 2016))
z <- historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2014, 2016))
x[[1]] > x[[2]]
y[[1]] > y[[2]]
z[[1]] > z[[2]]
data(diamonds)
head(diamonds)
devtools::load_all(".")
devtools::load_all(".")
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2015, 2016))
devtools::load_all(".")
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2015, 2016))
devtools::load_all(".")
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2015, 2016))
devtools::load_all(".")
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2013, 2016))
devtools::load_all(".")
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2013, 2016))
devtools::load_all(".")
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2013, 2016))
devtools::load_all(".")
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2013, 2016))
devtools::load_all(".")
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2013, 2016))
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2015, 2016))
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2014, 2016))
?override.aes
historical_range(dat, param = 'do_mgl', target_yr = 2013, hist_rng = c(2014, 2016), criteria = 2)
devtools::build_win()
devtools::build_win()
rmarkdown::pandoc_version()
pandoc_version()
rmarkdown::pandoc_version()
rmarkdown::pandoc_available
rmarkdown::pandoc_available()
rmarkdown::pandoc_path_arg()
rmarkdown::pandoc_version()
library(usethis)
usethis::use_build_ignore(files = 'LICENSE.txt')
devtools::load_all(".")
devtools::load_all(".")
## Water quality examples
dat_wq <- qaqc(apacpwq, qaqc_keep = c(0, 3, 5))
dat_wq <- setstep(dat_wq)
x <-
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
?threshold_summary
swmpr_in = dat_wq
swmpr_in = dat_wq
param = 'do_mgl'
parameter_threshold = 2
threshold_type = '<'
time_threshold = 2
summary_type = 'month'
plot_title = TRUE
plot = T
label_y_axis = T
swmpr_in = dat_wq
param = 'do_mgl'
parameter_threshold = 2
threshold_type = '<'
time_threshold = 2
summary_type = 'month'
plot_title = TRUE
pal = 'Set3'
plot = T
label_y_axis = T
dat <- swmpr_in
parm <- sym(param)
grp <- sym(summary_type)
conv <- converted
seas <- sym('season')
yr <- sym('year')
converted = F
conv <- converted
seas <- sym('season')
yr <- sym('year')
# attributes
parameters <- attr(dat, 'parameters')
station <- attr(dat, 'station')
data_type <- substr(station, 6, nchar(station))
if(!any(param %in% parameters))
stop('Param argument must name input column')
if(data_type == 'nut' && summary_type == 'month')
warning('Analyzing nutrient data on a monthly is not recommended. Please set summary_type = season, and specify parameters for assign_season. See examples for details.')
#determine if QAQC has been conducted
if(attr(dat, 'qaqc_cols'))
warning('QAQC columns present. QAQC not performed before analysis.')
y_label <- ifelse(label_y_axis
, y_count_labeler(param = param, parameter_threshold = parameter_threshold, threshold_type = threshold_type, time_threshold = time_threshold, converted = conv)
, '')
dat_threshold <- threshold_identification(dat
, param = param
, parameter_threshold = parameter_threshold
, threshold_type = threshold_type
, time_threshold = time_threshold)
dat_threshold$month <- lubridate::month(dat_threshold$starttime)
dat_threshold$year <- lubridate::year(dat_threshold$starttime)
# Assign the seasons and order them
dat_threshold$season <- assign_season(dat_threshold$starttime, abb = T, ...)
summary <- dat_threshold %>%
group_by(!! yr, !! grp, !! seas) %>%
summarise(count = n())
mn_yr <- min(lubridate::year(dat$datetimestamp))
mx_yr <- max(lubridate::year(dat$datetimestamp))
yr_ct <- mx_yr - mn_yr + 1
library(dplyr)
dat_threshold <- threshold_identification(dat
, param = param
, parameter_threshold = parameter_threshold
, threshold_type = threshold_type
, time_threshold = time_threshold)
dat_threshold$month <- lubridate::month(dat_threshold$starttime)
dat_threshold$year <- lubridate::year(dat_threshold$starttime)
# Assign the seasons and order them
dat_threshold$season <- assign_season(dat_threshold$starttime, abb = T, ...)
summary <- dat_threshold %>%
group_by(!! yr, !! grp, !! seas) %>%
summarise(count = n())
mn_yr <- min(lubridate::year(dat$datetimestamp))
mx_yr <- max(lubridate::year(dat$datetimestamp))
yr_ct <- mx_yr - mn_yr + 1
# Assign the seasons and order them
dat_threshold$season <- assign_season(dat_threshold$starttime, abb = T, ...)
# Assign the seasons and order them
dat_threshold$season <- assign_season(dat_threshold$starttime, abb = T)
View(dat_threshold)
y_label <- ifelse(label_y_axis
, y_count_labeler(param = param, parameter_threshold = parameter_threshold, threshold_type = threshold_type, time_threshold = time_threshold, converted = conv)
, '')
dat_threshold <- threshold_identification(dat
, param = param
, parameter_threshold = parameter_threshold
, threshold_type = threshold_type
, time_threshold = time_threshold)
dat_threshold$month <- lubridate::month(dat_threshold$starttime)
dat_threshold$year <- lubridate::year(dat_threshold$starttime)
# Assign the seasons and order them
dat_threshold$season <- assign_season(dat_threshold$starttime, abb = T)
summary <- dat_threshold %>%
group_by(!! yr, !! grp, !! seas) %>%
summarise(count = n())
mn_yr <- min(lubridate::year(dat$datetimestamp))
mx_yr <- max(lubridate::year(dat$datetimestamp))
yr_ct <- mx_yr - mn_yr + 1
summary_type
summary <- dat_threshold %>%
group_by(!! yr, !! grp, !! seas) %>%
summarise(count = n())
grp_ct <- as.numeric(length(unique(levels(summary$season))))
grp_nm <- as.character(unique(levels(summary$season)))
summary$grp_join <- as.character(summary$season)
dummy <- data.frame(grp_join = rep(grp_nm, yr_ct)
, year = rep(c(mn_yr:mx_yr), each = grp_ct)
, stringsAsFactors = F)
dat_grp <- left_join(dummy, summary)
dat_grp$count[is.na(dat_grp$count)] <- 0
dat_grp$grp_join <- factor(dat_grp$grp_join, levels = levels(dat_grp$season))
dat_grp$x_lab <- seq(from = 1, to = length(dat_grp$grp_join), by = 1)
by_arg <- ifelse(summary_type == 'year', 1, length(unique(levels(dat_grp$grp_join))))
brks <- seq(from = 1, to = max(dat_grp$x_lab), by = by_arg)
brk_labs <- seq(from = mn_yr, to = mx_yr, by = 1)
plt <-
ggplot(dat_grp, aes_string(x = 'x_lab', y = 'count', fill = 'grp_join')) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_x_continuous(breaks = brks, labels = brk_labs) +
labs(x = '', y = y_label)
brks <- seq(from = 1, to = max(dat_grp$x_lab), by = by_arg)
brk_labs <- seq(from = mn_yr, to = mx_yr, by = 1)
max(dat_grp$x_lab)
View(dat_grp)
View(dat_threshold)
summary <- dat_threshold %>%
group_by(!! yr, !! grp, !! seas) %>%
summarise(count = n())
View(summary)
View(dat_threshold)
View(summary)
seas
grp
grp_ct <- as.numeric(length(unique(levels(summary$season))))
grp_nm <- as.character(unique(levels(summary$season)))
summary$grp_join <- as.character(summary$season)
dummy <- data.frame(grp_join = rep(grp_nm, yr_ct)
, year = rep(c(mn_yr:mx_yr), each = grp_ct)
, stringsAsFactors = F)
dat_grp <- left_join(dummy, summary)
dat_grp$count[is.na(dat_grp$count)] <- 0
dat_grp$grp_join <- factor(dat_grp$grp_join, levels = levels(dat_grp$season))
View(dat_grp)
View(dummy)
dat_grp$x_lab <- seq(from = 1, to = length(dat_grp$grp_join), by = 1)
x_lab
View(dat_grp)
install_version("dplyr", version = "0.7.8", repos = "http://cran.us.r-project.org")
devtools::install_version("dplyr", version = "0.7.8", repos = "http://cran.us.r-project.org")
detach('dplyr')
detach('package:dplyr', unload = T)
devtools::load_all(".")
swmpr_in = dat_wq
param = 'do_mgl'
parameter_threshold = 2
threshold_type = '<'
time_threshold = 2
summary_type = 'month'
plot_title = TRUE
pal = 'Set3'
plot = T
label_y_axis = T
dat <- swmpr_in
parm <- sym(param)
dat_wq <- qaqc(apacpwq, qaqc_keep = c(0, 3, 5))
dat_wq <- setstep(dat_wq)
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
devtools::load_all(".")
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
devtools::load_all(".")
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
devtools::load_all(".")
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
devtools::load_all(".")
x <-
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
View(x)
tibble(
x = 1:2,
f = factor(c("a", "b"), levels = c("a", "b", "c"))
) %>%
group_by(f)
library(dplyr)
tibble(
x = 1:2,
f = factor(c("a", "b"), levels = c("a", "b", "c"))
) %>%
group_by(f)
devtools::load_all(".")
x <-
threshold_summary(dat_wq, param = 'do_mgl', parameter_threshold = 2
, threshold_type = '<', time_threshold = 2, summary_type = 'month'
, plot_title = TRUE)
dummy <- x[[1]]
summary <- x[[2]]
View(dummy)
View(summary)
?group_by
View(dummy)
dat_grp <- x[[3]]
View(dat_grp)
